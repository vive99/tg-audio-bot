from aiogram import Bot, Dispatcher, types, executor

API_TOKEN = '7963741763:AAG5cCO-gLJbWOhfOMTR-nNA_kKkVrMWqSY'
CHANNEL_ID = '@Mus.eQ üéµ'  # —Ç–≤–æ–π –∫–∞–Ω–∞–ª

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
user_images = {}

@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    file_id = message.photo[-1].file_id
    user_images[message.from_user.id] = file_id
    await message.reply("–ö–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –∞—É–¥–∏–æ—Ñ–∞–π–ª.")

@dp.message_handler(content_types=types.ContentType.AUDIO)
async def handle_audio(message: types.Message):
    user_id = message.from_user.id
    file_id_audio = message.audio.file_id
    caption = message.caption if message.caption else ""

    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å', —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ.")

    # –ñ–¥–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫
    @dp.message_handler(lambda msg: msg.text.lower() != '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    async def rename_audio(msg: types.Message):
        new_caption = msg.text
        if user_id in user_images:
            file_id_image = user_images[user_id]
            media = [
                types.InputMediaPhoto(media=file_id_image),
                types.InputMediaAudio(media=file_id_audio, caption=new_caption)
            ]
            await bot.send_media_group(CHANNEL_ID, media)
            await msg.reply("–ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –∞—É–¥–∏–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
            del user_images[user_id]
        else:
            await bot.send_audio(CHANNEL_ID, file_id_audio, caption=new_caption)
            await msg.reply("–ê—É–¥–∏–æ –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!")
        # –ü–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∂–¥–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–≤–æ–¥
        del user_images[user_id]
        return await dp.message_handler()  # –û—Ç–º–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Ö–µ–Ω–¥–ª–µ—Ä

    # –ï—Å–ª–∏ "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    @dp.message_handler(lambda msg: msg.text.lower() == '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    async def skip_caption(msg: types.Message):
        if user_id in user_images:
            file_id_image = user_images[user_id]
            media = [
                types.InputMediaPhoto(media=file_id_image),
                types.InputMediaAudio(media=file_id_audio)
            ]
            await bot.send_media_group(CHANNEL_ID, media)
            await msg.reply("–ü–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –∞—É–¥–∏–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è!")
            del user_images[user_id]

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
