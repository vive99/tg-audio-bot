from flask import Flask
import threading
from aiogram import Bot, Dispatcher, types, executor

API_TOKEN = '7963741763:AAG5cCO-gLJbWOhfOMTR-nNA_kKkVrMWqSY'  # –¢–≤–æ–π API —Ç–æ–∫–µ–Ω
CHANNEL_ID = '@Mus.eQ üéµ'  # –¢–≤–æ–π –∫–∞–Ω–∞–ª

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

app = Flask(__name__)

@app.route('/')
def index():
    return 'Bot is running'

def run_flask():
    app.run(host='0.0.0.0', port=8080)

# –ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
flask_thread = threading.Thread(target=run_flask)
flask_thread.start()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    file_id = message.photo[-1].file_id
    user_images[message.from_user.id] = file_id
    await message.reply("–ö–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –∞—É–¥–∏–æ—Ñ–∞–π–ª.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞—É–¥–∏–æ
@dp.message_handler(content_types=types.ContentType.AUDIO)
async def handle_audio(message: types.Message):
    user_id = message.from_user.id
    file_id_audio = message.audio.file_id
    audio_title = message.audio.title
    caption = message.caption if message.caption else ""

    # –ü—Ä–µ–¥–ª–æ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
    await message.reply("–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –ø–æ—Å—Ç—É?", reply_markup=keyboard)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—É–¥–∏–æ –∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    user_images[user_id] = {
        'audio_file_id': file_id_audio,
        'audio_title': audio_title,
        'caption': caption
    }

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
@dp.message_handler(lambda message: message.text in ["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–∞"])
async def handle_description(message: types.Message):
    user_id = message.from_user.id
    user_data = user_images.get(user_id)

    if not user_data:
        await message.reply("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏ –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        return

    if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        caption = user_data['caption']
    elif message.text == "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Å—Ç–∞":
        caption = user_data['audio_title']

    file_id_audio = user_data['audio_file_id']

    # –ü—É–±–ª–∏–∫—É–µ–º –∞—É–¥–∏–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º (–≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ –∞—É–¥–∏–æ - —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π + –æ–ø–∏—Å–∞–Ω–∏–µ)
    if user_data.get('image_file_id'):
        file_id_image = user_data['image_file_id']
        media = [
            types.InputMediaPhoto(media=file_id_image),
            types.InputMediaAudio(media=file_id_audio, caption=caption)
        ]
        await bot.send_media_group(CHANNEL_ID, media)
    else:
        await bot.send_audio(CHANNEL_ID, file_id_audio, caption=caption)
    
    await message.reply("–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
    del user_images[user_id]

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
